import pandas as pd
import numpy as np
from sklearn.tree import DecisionTreeRegressor
train=pd.read_csv('train.csv')
train.columns
#to select one column
y=train.SalePrice 

#features for taking necessary columns
train_features=['OverallQual', 'GrLivArea', 'GarageCars', 'GarageArea']
x= train[train_features]
x=x.dropna(axis=0)
x.describe()
x.head()
#define model, specify number of random stateto ensure same result each statestate run 
train_model=DecisionTreeRegressor(random_state=1)
#fit model
train_model.fit(x,y)
print("making prediction :")
print(x.head())
print(train_model.predict(x.head()))

#to find out error
from sklearn.metrics import mean_absolute_error
predict_price=train_model.predict(x)
mean_absolute_error(y,predict_price)

#validation
#from sklearn.model_selection import train_test_split for train test split
train_x, val_x, train_y, val_y = train_test_split(x,y,random_state=0)
train_model.fit(train_x,train_y)
prediction_test_price= train_model.predict(val_x)
print(mean_absolute_error(val_y,prediction_test_price))

